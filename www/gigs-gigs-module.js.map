{"version":3,"sources":["./src/app/pages/gigs/gigs.page.html","./src/app/pages/gigs/gigs-routing.module.ts","./src/app/pages/gigs/gigs.module.ts","./src/app/pages/gigs/gigs.page.scss","./src/app/pages/gigs/gigs.page.ts"],"names":[],"mappings":"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","file":"gigs-gigs-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>My Gigs</ion-title>\\n        \\n        \\n        \\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button (click)=\\\"openNotifications()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n                <ion-badge *ngIf=\\\"notificationsCount > 0\\\" class=\\\"notifications-badge\\\" color=\\\"danger\\\">{{notificationsCount}}</ion-badge>\\n            </ion-button>   \\n            \\n        </ion-buttons>      \\n        \\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"gigs\\\">\\n    \\n    \\n    <div class=\\\"gigs__loading\\\" *ngIf=\\\"loading\\\">\\n        <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n    </div>        \\n    \\n    \\n\\n    <ion-list class=\\\"gigs__list\\\" *ngIf=\\\"!loading\\\">\\n\\n        <ion-list-header *ngIf=\\\"live.length > 0\\\">Live</ion-list-header>  \\n        \\n        <ion-item *ngFor=\\\"let gig of live\\\" [routerLink]=\\\"['/gigs/' + gig.id]\\\" routerDirection=\\\"forward\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n                <img [src]=\\\"gig.profile.avatar\\\">\\n            </ion-avatar>\\n            <ion-label>\\n                <h2><span *ngIf=\\\"user.id !== gig.user_id\\\">Booked by</span> {{gig.profile.name}}</h2>\\n                <p>Started {{formatLiveDate(gig.date_required)}}</p>\\n            </ion-label>\\n        </ion-item>          \\n\\n        <ion-list-header *ngIf=\\\"pending.length > 0\\\">Pending</ion-list-header>  \\n\\n        <ion-item *ngFor=\\\"let gig of pending\\\" [routerLink]=\\\"['/gigs/' + gig.id]\\\" routerDirection=\\\"forward\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n                <img [src]=\\\"gig.profile.avatar\\\">\\n            </ion-avatar>\\n            <ion-label>\\n                <h2><span *ngIf=\\\"user.id !== gig.user_id\\\">Booked by</span> {{gig.profile.name}}</h2>\\n                <p>Booked for {{formatUpcomingDate(gig.date_required)}}</p>\\n            </ion-label>\\n        </ion-item>     \\n        \\n        \\n        <ion-list-header *ngIf=\\\"upcoming.length > 0\\\">Upcoming</ion-list-header>  \\n\\n        <ion-item *ngFor=\\\"let gig of upcoming\\\" [routerLink]=\\\"['/gigs/' + gig.id]\\\" routerDirection=\\\"forward\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n                <img [src]=\\\"gig.profile.avatar\\\">\\n            </ion-avatar>\\n            <ion-label>\\n                <h2><span *ngIf=\\\"user.id !== gig.user_id\\\">Booked by</span> {{gig.profile.name}}</h2>\\n                <p>Booked for {{formatUpcomingDate(gig.date_required)}}</p>\\n            </ion-label>\\n        </ion-item>      \\n        \\n        \\n        <ion-list-header *ngIf=\\\"completed.length > 0\\\">Completed</ion-list-header>  \\n\\n        <ion-item *ngFor=\\\"let gig of completed\\\" [routerLink]=\\\"['/gigs/' + gig.id]\\\" routerDirection=\\\"forward\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n                <img [src]=\\\"gig.profile.avatar\\\">\\n            </ion-avatar>\\n            <ion-label>\\n                <h2><span *ngIf=\\\"user.id !== gig.user_id\\\">Booked by</span> {{gig.profile.name}}</h2>\\n                <p>Played {{formatUpcomingDate(gig.date_required)}}</p>\\n            </ion-label>\\n        </ion-item>              \\n        \\n        \\n\\n\\n    </ion-list>    \\n \\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GigsPage } from './gigs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GigsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GigsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GigsPageRoutingModule } from './gigs-routing.module';\n\nimport { GigsPage } from './gigs.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GigsPageRoutingModule\n  ],\n  declarations: [GigsPage]\n})\nexport class GigsPageModule {}\n","export default \".gigs .gigs__loading {\\n  text-align: center;\\n  margin-top: 60px;\\n}\\n.gigs .gigs__list ion-list-header {\\n  margin-bottom: 10px;\\n  margin-top: 20px;\\n  padding-top: 10px;\\n}\\n.gigs .gigs__list ion-list-header:first-child {\\n  margin-top: 0px;\\n  padding-top: 0px;\\n}\\n.gigs .gigs__list ion-list-header ion-label {\\n  margin-bottom: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZ2lncy9EOlxcVGF5bG9yXFxEb2N1bWVudHNcXFdlYnNpdGVzXFxtdXNpY2J1ZGR5XFxhcHAvc3JjXFxhcHBcXHBhZ2VzXFxnaWdzXFxnaWdzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvZ2lncy9naWdzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHSTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7QUNGUjtBREtJO0VBQ0ksbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0FDSFI7QURNSTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtBQ0pSO0FET0k7RUFDSSxrQkFBQTtBQ0xSIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZ2lncy9naWdzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5naWdze1xyXG4gICAgXHJcbiAgICBcclxuICAgIC5naWdzX19sb2FkaW5ne1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tdG9wOiA2MHB4OyAgICAgICAgXHJcbiAgICB9ICAgIFxyXG5cclxuICAgIC5naWdzX19saXN0IGlvbi1saXN0LWhlYWRlcntcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgcGFkZGluZy10b3A6MTBweDtcclxuICAgIH1cclxuXHJcbiAgICAuZ2lnc19fbGlzdCBpb24tbGlzdC1oZWFkZXI6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgbWFyZ2luLXRvcDowcHg7XHJcbiAgICAgICAgcGFkZGluZy10b3A6MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5naWdzX19saXN0IGlvbi1saXN0LWhlYWRlciBpb24tbGFiZWx7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTowcHg7XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG4iLCIuZ2lncyAuZ2lnc19fbG9hZGluZyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogNjBweDtcbn1cbi5naWdzIC5naWdzX19saXN0IGlvbi1saXN0LWhlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuLmdpZ3MgLmdpZ3NfX2xpc3QgaW9uLWxpc3QtaGVhZGVyOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMHB4O1xuICBwYWRkaW5nLXRvcDogMHB4O1xufVxuLmdpZ3MgLmdpZ3NfX2xpc3QgaW9uLWxpc3QtaGVhZGVyIGlvbi1sYWJlbCB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn0iXX0= */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport {GigService} from '../../services/gig/gig.service';\nimport { ModalController} from '@ionic/angular';\nimport {AuthenticationService} from '../../services/authentication/authentication.service';\nimport {NotificationsService} from '../../services/notifications/notifications.service';\nimport {NotificationsPage} from '../notifications/notifications.page';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'app-gigs',\n    templateUrl: './gigs.page.html',\n    styleUrls: ['./gigs.page.scss'],\n})\nexport class GigsPage implements OnInit {\n\n    public live:Array<any>;\n    public upcoming:Array<any>;\n    public completed:Array<any>;\n    public pending:Array<any>;\n    \n    public user:any;\n    \n    public loading:boolean;\n    \n    \n    public notificationsCount:number;   \n    public requests:Array<any>;    \n    \n\n    constructor(private gigService:GigService, private authenticationService:AuthenticationService, \n        private notificationsService:NotificationsService, private ngZone: NgZone, public modalController: ModalController) { \n    \n        \n        this.live = [];\n        this.upcoming = [];\n        this.completed = [];\n        this.pending = [];    \n        \n        this.loading = true;\n        \n        this.authenticationService.getUserData().subscribe((value) => {\n            this.user = value;\n\n            \n        });  \n        \n        \n        this.gigService.monitorGigs().subscribe((value) => {          \n            if (!this.loading){\n                this.getGigs();\n            }            \n        })\n        \n        \n        this.notificationsCount = 0;\n        this.notificationsService.monitorNotifications().subscribe((changed) => {\n\n            this.notificationsService.getNotificationCount().then((data:number) => {\n                this.ngZone.run(() => {  \n                    this.notificationsCount = data;\n                });\n            })\n        });           \n                \n           \n            \n    \n    }\n\n    ngOnInit() {\n        \n        \n    }\n    \n    ionViewDidEnter(){\n        this.getGigs();\n    }\n    \n    \n    public getGigs(){\n\n        \n        this.gigService.getGigs().then((data:Array<any>) => {\n            console.log(data);\n        \n            this.live = [];\n            this.upcoming = [];\n            this.completed = [];\n            this.pending = [];\n        \n                    \n            for (let gig of data){\n                if (gig.status === \"live\"){\n                    this.live.push(gig);\n                }\n                else if (gig.status === \"upcoming\"){\n                    this.upcoming.push(gig);\n                }\n                else if (gig.status === \"completed\"){\n                    this.completed.push(gig);\n                }\n                else if (gig.status === \"pending\"){\n                    this.pending.push(gig);\n                }\n                \n                \n            }\n            \n            this.loading = false;\n            \n        })\n        \n    }\n    \n    \n    public formatUpcomingDate(date){\n        let localeOffset = (new Date().getTimezoneOffset());\n        return moment(date).add(localeOffset, 'm').format(\"Do MMMM [at] h:mma\")\n    }\n    public formatCompletedDate(date){\n        let localeOffset = (new Date().getTimezoneOffset());\n        return moment(date).add(localeOffset, 'm').format(\"Do MMMM [at] h:mma\")\n    }\n    public formatLiveDate(date){\n        let localeOffset = (new Date().getTimezoneOffset());\n        return moment(date).add(localeOffset, 'm').from(moment()); \n    }\n    \n    \n    public async openNotifications(){\n        const modal = await this.modalController.create({\n          component: NotificationsPage,\n          componentProps: {}\n        });\n\n        await modal.present();         \n    }      \n    \n    \n}\n"],"sourceRoot":"webpack:///"}